import requests
import json
import time

# --- C·∫§U H√åNH ---
# Danh s√°ch c√°c ƒë·ªãa ch·ªâ IP c·∫ßn c√†o d·ªØ li·ªáu
IP_ADDRESSES = [
    "10.30.12.42",
    "10.30.12.41",
    "10.30.12.36",
    "10.30.12.37"
]

API_ENDPOINT = "/Home/GetPrinterStatus"
MAX_RETRIES = 5  
RETRY_DELAY = 3  

# Headers ƒë·∫ßy ƒë·ªß ƒë·ªÉ m√¥ ph·ªèng tr√¨nh duy·ªát v√† y√™u c·∫ßu AJAX
headers = {
    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36',
    'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8',
    'Content-Type': 'application/json; charset=utf-8',
    'X-Requested-With': 'XMLHttpRequest',
}

# --- LOGIC X·ª¨ L√ù D·ªÆ LI·ªÜU ---

def print_tray_data(data, tray_name, data_prefix):
    """H√†m in d·ªØ li·ªáu khay (lo·∫°i b·ªè Middle Tray)."""
    if tray_name == "Middle Tray":
        return

    if data.get(f'{data_prefix}Visible_Value'):
        print(f"‚ñ∂Ô∏è {tray_name}:")
        print(f"  Lo·∫°i Phim: {data.get(f'{data_prefix}FilmType_Value', 'N/A').strip()}")
        print(f"  S·ªë L∆∞·ª£ng: {data.get(f'{data_prefix}FilmCount_Value', 'N/A').strip()}")
        print(f"  Tr·∫°ng Th√°i: {data.get(f'{data_prefix}FilmStatus_Value', 'N/A').strip()}")
    else:
        # Ch·ªâ in 'Kh√¥ng hi·ªÉn th·ªã' n·∫øu n√≥ kh√¥ng ph·∫£i l√† Middle Tray b·ªã b·ªè qua
        if tray_name in ["Upper Tray", "Lower Tray"]:
             print(f"‚ñ∂Ô∏è {tray_name}: Kh√¥ng hi·ªÉn th·ªã.")

def get_printer_status_for_ip(ip_address):
    """Th·ª±c hi·ªán c√†o d·ªØ li·ªáu v·ªõi logic t·ª± ƒë·ªông h√≥a phi√™n v√† th·ª≠ l·∫°i cho m·ªôt IP c·ª• th·ªÉ."""
    URL_BASE = f"http://{ip_address}"
    print(f"\n========================================================")
    print(f"üöÄ ƒêang x·ª≠ l√Ω Thi·∫øt b·ªã t·∫°i IP: {ip_address}")
    print(f"========================================================")
    
    with requests.Session() as session:
        session.headers.update(headers)
        response_get = None
        
        # B∆Ø·ªöC 1: GET trang ch·ªß ƒë·ªÉ t·∫°o Session ID, th·ª≠ l·∫°i n·∫øu l·ªói 500
        for attempt in range(MAX_RETRIES):
            # --- ƒê√É LO·∫†I B·ªé IN S·ªê L·∫¶N TH·ª¨ ---
            try:
                response_get = session.get(URL_BASE + '/', timeout=10)
                
                if response_get.status_code == 200:
                    # print("‚úÖ GET th√†nh c√¥ng. Cookie SessionID m·ªõi ƒë√£ ƒë∆∞·ª£c t·∫°o.")
                    break
                
                elif response_get.status_code == 500:
                    # N·∫øu l·ªói 500, ch·ªù v√† th·ª≠ l·∫°i, kh√¥ng in s·ªë l·∫ßn th·ª≠
                    time.sleep(RETRY_DELAY)
                
                else:
                    print(f"‚ùå GET L·ªñI: M√£ tr·∫°ng th√°i {response_get.status_code}. D·ª´ng th·ª≠ l·∫°i.")
                    return
            
            except requests.exceptions.RequestException as e:
                # N·∫øu l·ªói k·∫øt n·ªëi, ch·ªù v√† th·ª≠ l·∫°i
                time.sleep(RETRY_DELAY)
        
        if not response_get or response_get.status_code != 200:
            print("‚ùå Thi·∫øt l·∫≠p phi√™n th·∫•t b·∫°i. Kh√¥ng th·ªÉ truy c·∫≠p. B·ªè qua IP n√†y.")
            return

        # B∆Ø·ªöC 2: G·ª≠i POST API ƒë·ªÉ l·∫•y D·ªØ li·ªáu
        
        try:
            response_post = session.post(
                URL_BASE + API_ENDPOINT, 
                data='{}', 
                timeout=10
            )
            
            if response_post.status_code == 200:
                data = response_post.json()
                
                if data.get('Return_Successful'):
                    print("‚úÖ L·∫•y d·ªØ li·ªáu th√†nh c√¥ng.")
                    print("\n--- K·∫æT QU·∫¢ TR·∫†NG TH√ÅI ---")
                    
                    print_tray_data(data, "Upper Tray", "UpperTray_")
                    # Kh√¥ng in Middle Tray
                    print_tray_data(data, "Lower Tray", "LowerTray_")
                    
                else:
                    print(f"‚ùå L·ªói ·ª©ng d·ª•ng (JSON): {data.get('Return_Error_Message', 'L·ªói kh√¥ng x√°c ƒë·ªãnh')}")
            else:
                print(f"‚ùå POST L·ªñI: M√£ tr·∫°ng th√°i {response_post.status_code}. D·ª´ng.")
                
        except (requests.exceptions.RequestException, json.JSONDecodeError) as e:
            print(f"‚ùå L·ªói trong b∆∞·ªõc POST: {e}")

# --- CH·∫†Y CH∆Ø∆†NG TR√åNH CH√çNH ---
if __name__ == "__main__":
    for ip in IP_ADDRESSES:
        get_printer_status_for_ip(ip)